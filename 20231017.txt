@실수(=소수) 표현 방법

1. 고정 소수점
고정된 소수점 위치를 가진다.
소수점 이하의 숫자들은 항상 일정한 자리수를 가진다.
123.45(=2개)
정수와 소수부분을 쉽게 나눌수 있다.
큰범위의 숫자를 표현하긴 X

2. 부동 소수점(=고정X)
소수점의 위치가 고정되어 있지 않다.
가수부-지수부
float : 8개 소수점 표현
double : 11개 소수점 표현

3. 문자형 char = 2byte(숫자로표현)
아스키 코드 / 유니코드 = 변경해서 사용한다.
1. 작은 따옴표로 묶어서 저장한다.
char ch1 = "A"; X=> 'A';-> 아스키 코드 65번 찾기
2. 공백이 없는 따옴표는 에러난다.
CHAR CH3 = ' '; //에러 공백X
3. 문자 그대로 저장되는게 아니다 
유니코드(=2byte=65535문자)/ 아스키코드(=128개 1byte)로 
변환된다.
4. 캐릭터는 한가지문자로만 표현된다.

4. 기본 논리형 표현(=boolean) = 1byte
값의범위는 : true/false
boolean gender = true;

5. 참조자료형
1) 기본 자료형(정수 : int long  byte/ 실수 : float double/   문자 : char) 과 참조자료형 = 값을 저장
*stack 메모리 공간을 할당 받아 저장한다.

2) 참조 자료형 = 주소 저장하는 방식 <- 메모리에
*heap영역 이다.
String / Date -> 문자열을 객체로 받아서 프린트
String name = new String();
name = "김땡땡";

6. 자료형 변환 (=자료형 자료형끼리 선언)X
연산을 수행할때 마지막 연산값을 저장한다.
*변수가 가진 자료형을 다른 자료형으로 변환하는 방식(=형변환)

@자동(auto)형변환
서로 다른 자료형간의 대입이나 연산을 할경우
자바의 컴파일러가 자동으로 형변환을 생략할수있다.
*자동 형변환 가능한 예시(데이터 손실이 없음)
-크기가 작은 자료형(short<int)에서 큰 자료형으로 변환할때
float ft = (int)100;

-정수형이 실수형(소수)으로 변환할때
int num1 =100;
double num2 = num1; //100.0

@강제(auto=X) 형변환
1. 큰 자료형의 변수를 작은 자료형으로 담아내는것이다.
2. 데이터가 보존 될수 있거나 손실이 발생되는 경우도 있다.
자료형 변수명 = (강제로변환할자료형)변수명;

int num1 = 10;
byte num2 = (byte)num1;

*자동 형 변환(업캐스팅)
*강제 형 변환(다운 캐스팅)

@데이터 입력
//자바 라이브러리 import
import java.util.Scanner;
//Scanner 객체 선언
Scanner input = new Scanner(System.in)
//값을 입력받기
byte input_num = input.nextByte();

-정수형
byte nextByte() : 입력 받을 값을 byte형으로 변환
short nextShort() : 입력 받을 값을 byte형으로 변환
int nextInt() : 입력 받을 값을 byte형으로 변환
long nextlong() : 입력 받을 값을 byte형으로 변환
-실수형
float nextFloat() : 입력 받을 값을 float로 변환
double nextDouble : 입력 받을 값을 Double로 변환
-문자형
String nextLine() : 입력 받은 전체의 문자열 타입을 엔터구분
String next() : 입력 받을 문자열 타입으로(띄어쓰기)



